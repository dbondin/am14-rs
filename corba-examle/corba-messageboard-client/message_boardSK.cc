// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "message_board.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



MessageBoard::MessagePostBox_ptr MessageBoard::MessagePostBox_Helper::_nil() {
  return ::MessageBoard::MessagePostBox::_nil();
}

::CORBA::Boolean MessageBoard::MessagePostBox_Helper::is_nil(::MessageBoard::MessagePostBox_ptr p) {
  return ::CORBA::is_nil(p);

}

void MessageBoard::MessagePostBox_Helper::release(::MessageBoard::MessagePostBox_ptr p) {
  ::CORBA::release(p);
}

void MessageBoard::MessagePostBox_Helper::marshalObjRef(::MessageBoard::MessagePostBox_ptr obj, cdrStream& s) {
  ::MessageBoard::MessagePostBox::_marshalObjRef(obj, s);
}

MessageBoard::MessagePostBox_ptr MessageBoard::MessagePostBox_Helper::unmarshalObjRef(cdrStream& s) {
  return ::MessageBoard::MessagePostBox::_unmarshalObjRef(s);
}

void MessageBoard::MessagePostBox_Helper::duplicate(::MessageBoard::MessagePostBox_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

MessageBoard::MessagePostBox_ptr
MessageBoard::MessagePostBox::_duplicate(::MessageBoard::MessagePostBox_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

MessageBoard::MessagePostBox_ptr
MessageBoard::MessagePostBox::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


MessageBoard::MessagePostBox_ptr
MessageBoard::MessagePostBox::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

MessageBoard::MessagePostBox_ptr
MessageBoard::MessagePostBox::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_MessagePostBox _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_MessagePostBox* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_MessagePostBox;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* MessageBoard::MessagePostBox::_PD_repoId = "IDL:MessageBoard/MessagePostBox:1.0";


MessageBoard::_objref_MessagePostBox::~_objref_MessagePostBox() {
  
}


MessageBoard::_objref_MessagePostBox::_objref_MessagePostBox(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::MessageBoard::MessagePostBox::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
MessageBoard::_objref_MessagePostBox::_ptrToObjRef(const char* id)
{
  if( id == ::MessageBoard::MessagePostBox::_PD_repoId )
    return (::MessageBoard::MessagePostBox_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::MessageBoard::MessagePostBox::_PD_repoId) )
    return (::MessageBoard::MessagePostBox_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_105a5451df1f3e14_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_105a5451df1f3e14_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var result;
};

void _0RL_cd_105a5451df1f3e14_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_105a5451df1f3e14_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

const char* const _0RL_cd_105a5451df1f3e14_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_105a5451df1f3e14_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_105a5451df1f3e14_00000000* tcd = (_0RL_cd_105a5451df1f3e14_00000000*)cd;
  MessageBoard::_impl_MessagePostBox* impl = (MessageBoard::_impl_MessagePostBox*) svnt->_ptrToInterface(MessageBoard::MessagePostBox::_PD_repoId);
  tcd->result = impl->getVersion();


}

char* MessageBoard::_objref_MessagePostBox::getVersion()
{
  _0RL_cd_105a5451df1f3e14_00000000 _call_desc(_0RL_lcfn_105a5451df1f3e14_10000000, "getVersion", 11);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _wvoid_i_cstring_i_cstring
class _0RL_cd_105a5451df1f3e14_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_105a5451df1f3e14_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 1, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
};

void _0RL_cd_105a5451df1f3e14_20000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_105a5451df1f3e14_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

const char* const _0RL_cd_105a5451df1f3e14_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_105a5451df1f3e14_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_105a5451df1f3e14_20000000* tcd = (_0RL_cd_105a5451df1f3e14_20000000*)cd;
  MessageBoard::_impl_MessagePostBox* impl = (MessageBoard::_impl_MessagePostBox*) svnt->_ptrToInterface(MessageBoard::MessagePostBox::_PD_repoId);
  impl->putMessage(tcd->arg_0, tcd->arg_1);


}

void MessageBoard::_objref_MessagePostBox::putMessage(const char* from, const char* message)
{
  _0RL_cd_105a5451df1f3e14_20000000 _call_desc(_0RL_lcfn_105a5451df1f3e14_30000000, "putMessage", 11);
  _call_desc.arg_0 = from;
  _call_desc.arg_1 = message;

  _invoke(_call_desc);



}
MessageBoard::_pof_MessagePostBox::~_pof_MessagePostBox() {}


omniObjRef*
MessageBoard::_pof_MessagePostBox::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::MessageBoard::_objref_MessagePostBox(ior, id);
}


::CORBA::Boolean
MessageBoard::_pof_MessagePostBox::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::MessageBoard::MessagePostBox::_PD_repoId) )
    return 1;
  
  return 0;
}

const MessageBoard::_pof_MessagePostBox _the_pof_MessageBoard_mMessagePostBox;

MessageBoard::_impl_MessagePostBox::~_impl_MessagePostBox() {}


::CORBA::Boolean
MessageBoard::_impl_MessagePostBox::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getVersion") ) {

    _0RL_cd_105a5451df1f3e14_00000000 _call_desc(_0RL_lcfn_105a5451df1f3e14_10000000, "getVersion", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "putMessage") ) {

    _0RL_cd_105a5451df1f3e14_20000000 _call_desc(_0RL_lcfn_105a5451df1f3e14_30000000, "putMessage", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
MessageBoard::_impl_MessagePostBox::_ptrToInterface(const char* id)
{
  if( id == ::MessageBoard::MessagePostBox::_PD_repoId )
    return (::MessageBoard::_impl_MessagePostBox*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::MessageBoard::MessagePostBox::_PD_repoId) )
    return (::MessageBoard::_impl_MessagePostBox*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
MessageBoard::_impl_MessagePostBox::_mostDerivedRepoId()
{
  return ::MessageBoard::MessagePostBox::_PD_repoId;
}

POA_MessageBoard::MessagePostBox::~MessagePostBox() {}

